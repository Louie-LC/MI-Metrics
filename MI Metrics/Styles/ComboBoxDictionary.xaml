<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MI_Metrics.Styles" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
                    xmlns:sm="clr-namespace:MI_Metrics">

    <Storyboard x:Key="ComboBoxSelected">
        <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="ContentTextBlock" Storyboard.TargetProperty="FontSize" To="10" Duration="00:00:00.15"/>
        <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="ContentGrid" Storyboard.TargetProperty="Height" To="32" Duration="00:00:00.15"/>
        <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="ContentLabelGrid" Storyboard.TargetProperty="Height" To="16" Duration="00:00:00.15"/>
        <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="ContentPresenterGrid" Storyboard.TargetProperty="Height" To="16" Duration="00:00:00.15"/>
    </Storyboard>

    <Storyboard x:Key="ComboBoxUnSelected">
        <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="ContentTextBlock" Storyboard.TargetProperty="FontSize" To="14" Duration="00:00:00.15"/>
        <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="ContentGrid" Storyboard.TargetProperty="Height" To="24" Duration="00:00:00.15"/>
        <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="ContentLabelGrid" Storyboard.TargetProperty="Height" To="24" Duration="00:00:00.15"/>
        <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="ContentPresenterGrid" Storyboard.TargetProperty="Height" To="0" Duration="00:00:00.15"/>
    </Storyboard>

    <Storyboard x:Key="ComboBoxHover">
        <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="templateBackground" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Opacity)" To="0.1" Duration="00:00:00.15"/>
    </Storyboard>
    
    <Storyboard x:Key="ComboBoxUnHover">
        <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="templateBackground" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Opacity)" To="0.05" Duration="00:00:00.15"/>
    </Storyboard>

    
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
        <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFECF4FC" Offset="0.0"/>
        <GradientStop Color="#FFDCECFC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
        <GradientStop Color="#FFDCECFC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFDAECFC" Offset="0.0"/>
        <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
        <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>



    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="0" Background="Transparent" SnapsToDevicePixels="true">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid Height="40">
            <!--The combobox background-->
            <Border x:Name="templateBackground" CornerRadius="2">
                <Border.Background>
                    <SolidColorBrush Color="{StaticResource UI1}" Opacity=".05"/>
                </Border.Background>
            </Border>

            <!--The combobox underline-->
            <Border x:Name="border" BorderThickness="0,0,0,1">
                <Border.BorderBrush>
                    <SolidColorBrush Color="{StaticResource UI1}" Opacity=".2"/>
                </Border.BorderBrush>
            </Border>


            <Grid x:Name="templateRoot" Height="40">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="8"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="32"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="4"/>
                    <RowDefinition Height="32"/>
                    <RowDefinition Height="4"/>
                </Grid.RowDefinitions>



                <!--The popup container for the combobox items-->
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="6" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Grid x:Name="shadow" Margin="0,0,20,20" Effect="{StaticResource OverlayLower}" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border  x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </Popup>

                <!--The ToggleButton is a hidden button that sits arcoss the entire combobox and controls the openeing and closing of the combobox-->
                <ToggleButton x:Name="toggleButton" Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Grid.ColumnSpan="6" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Grid Grid.Row="1" Grid.Column="1" x:Name="ContentGrid" Height="24" VerticalAlignment="Center" Focusable="False" IsHitTestVisible="False">
                    <Grid x:Name="ContentLabelGrid" Height="24" VerticalAlignment="Top">
                        <TextBlock x:Name="ContentTextBlock" VerticalAlignment="Center" Text="{TemplateBinding Tag}" FontFamily="Siemens Sans" FontSize="14"  IsHitTestVisible="False" Focusable="False" HorizontalAlignment="Left" Background="Transparent" Opacity=".6"/>
                    </Grid>
                    <Grid x:Name="ContentPresenterGrid" Height="0" VerticalAlignment="Bottom">
                        <ContentPresenter Grid.Row="1" x:Name="contentPresenter" TextBlock.FontFamily="Siemens Sans" TextBlock.FontSize="12" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="Left" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Focusable="False"/>
                    </Grid>
                </Grid>

                <!--The up and down arrow grid-->
                <Grid Grid.Row="1" Grid.Column="3" HorizontalAlignment="Right" VerticalAlignment="Center" IsHitTestVisible="False">
                    <Path x:Name="upArrow" IsHitTestVisible="False" Visibility="Hidden" Data="F1 M 0,5 L 10,5 L 5,0 L 0,5 Z" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Path.Fill>
                            <SolidColorBrush Color="{StaticResource UI1}" Opacity="0.6"/>
                        </Path.Fill>
                    </Path>
                    <Path x:Name="downArrow" IsHitTestVisible="False" Visibility="Visible" Data="F1 M 0,0 L 10,0 L 5,5 Z" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Path.Fill>
                            <SolidColorBrush Color="{StaticResource UI1}" Opacity="0.4"/>
                        </Path.Fill>
                    </Path>
                </Grid>

            </Grid>

        </Grid>

        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsDropDownOpen" Value="False"/>
                    <Condition Property="SelectedIndex" Value="-1"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource ComboBoxUnSelected}"/>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource ComboBoxSelected}"/>
                </MultiTrigger.ExitActions>
            </MultiTrigger>

            <Trigger Property="IsDropDownOpen" Value="True">
                <Setter TargetName="upArrow" Property="Visibility" Value="Visible"/>
                <Setter TargetName="downArrow" Property="Visibility" Value="Hidden"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource ComboBoxHover}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource ComboBoxUnHover}"/>
                </Trigger.ExitActions>
            </Trigger>
            

            <Trigger Property="HasItems" Value="false">
                <Setter Property="IsEnabled" Value="false"/>
            </Trigger>
            <Trigger Property="HasItems" Value="true">
                <Setter Property="IsEnabled" Value="true"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>

            <Trigger Property="sm:ComboBoxHelper.Safety" Value="True">
                <Setter TargetName="border" Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Opacity="1" Color="{StaticResource FunctionalYellow}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            
            <Trigger Property="sm:ComboBoxHelper.Error" Value="True">
                <Setter TargetName="border" Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Opacity="1" Color="{StaticResource FunctionalRed}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            
            <Trigger Property="sm:ComboBoxHelper.Success"  Value="True">
                <Setter TargetName="border" Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Opacity="1" Color="{StaticResource FunctionalGreen}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
     
    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        <Setter Property="FontFamily" Value="Siemens Sans"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="14"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.4"/>
            </Trigger>
        </Style.Triggers>
    </Style>



</ResourceDictionary>