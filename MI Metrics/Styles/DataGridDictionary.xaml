<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MI_Metrics">

    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Siemens Sans"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource UI1}" Opacity="0.9"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="border" BorderBrush="Transparent" BorderThickness="0" Background="Transparent">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="4"/>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="4"/>
                            </Grid.RowDefinitions>
                            <ContentPresenter Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalAlignment}"/>

                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CurrentStates">
                                <VisualState x:Name="Regular" />
                                <VisualState x:Name="Current"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource UI1}" Opacity="0.9"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Siemens Sans"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource UI1}" Opacity="0.9"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="border" BorderBrush="Transparent" BorderThickness="0" Background="Transparent">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="4"/>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="4"/>
                            </Grid.RowDefinitions>
                            <ContentPresenter Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalAlignment}"/>

                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CurrentStates">
                                <VisualState x:Name="Regular" />
                                <VisualState x:Name="Current"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource UI1}" Opacity="0.9"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="DataGridRow" TargetType="{x:Type DataGridRow}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Background" Value="Transparent"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" BorderThickness="0,0,0,1">
                        <Border.Background>
                            <SolidColorBrush Color="{StaticResource UI1}" Opacity="0"/>
                        </Border.Background>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{StaticResource UI1}" Opacity="0.1"/>
                        </Border.BorderBrush>
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1"
                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <DataGridDetailsPresenter Grid.Column="1"
                                      Grid.Row="1"
                                      Visibility="{TemplateBinding DetailsVisibility}"
                                      SelectiveScrollingGrid.SelectiveScrollingOrientation=
                "{Binding AreRowDetailsFrozen, 
                ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
                Converter={x:Static DataGrid.RowDetailsScrollingConverter}, 
                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                            <DataGridRowHeader Grid.RowSpan="2"
                               SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                               Visibility="{Binding HeadersVisibility, 
                ConverterParameter={x:Static DataGridHeadersVisibility.Row}, 
                Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        </SelectiveScrollingGrid>


                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Normal_Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Opacity)" To="0.1" Duration="00:00:00.15"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Opacity)" To="0.05" Duration="00:00:00.15"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="local:DataGridHelper.Safety" Value="True">
                            <Setter TargetName="DGR_Border" Property="BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource FunctionalYellow}" Opacity="1"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridHeader" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="SeparatorVisibility" Value="Collapsed"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Siemens Sans"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource UI1}" Opacity="0.9"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Border x:Name="columnHeaderBorder" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{StaticResource UI1}" Opacity="0.6"/>
                        </Border.BorderBrush>
                        <Grid VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="32"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="12"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="32"/>
                                <ColumnDefinition Width="12"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Row="0" Grid.Column="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <Grid Grid.Row="0" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True">
                                <Path Grid.Row="0" Grid.Column="2" x:Name="arrow" Data="M 0,0 L 10,0 L 5,5 Z" SnapsToDevicePixels="False" RenderTransformOrigin="0.5, 0.5">
                                    <Path.Fill>
                                        <SolidColorBrush Color="{StaticResource UI1}" Opacity="0.0"/>
                                    </Path.Fill>
                                    <Path.LayoutTransform>
                                        <RotateTransform x:Name="arrowTransform" Angle="0"/>
                                    </Path.LayoutTransform>
                                </Path>
                                <Path Grid.Row="0" Grid.Column="2" x:Name="highlightArrow" Data="M 0,0 L 10,0 L 5,5 Z" SnapsToDevicePixels="False" RenderTransformOrigin="0.5, 0.5">
                                    <Path.Fill>
                                        <SolidColorBrush Color="{StaticResource UI1}" Opacity="0.0"/>
                                    </Path.Fill>
                                    <Path.LayoutTransform>
                                        <RotateTransform x:Name="highlightArrowTransform" Angle="0"/>
                                    </Path.LayoutTransform>
                                </Path>
                            </Grid>
                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="highlightArrow" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)" To="0.0" Duration="00:00:00.15"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="highlightArrow" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)" To="0.6" Duration="00:00:00.15"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SortStates">
                                <VisualState x:Name="Unsorted">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)" To="0.0" Duration="00:00:00.15"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SortAscending">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)" To="0.4" Duration="00:00:00.15"/>
                                        <DoubleAnimation Storyboard.TargetName="arrowTransform" Storyboard.TargetProperty="(RotateTransform.Angle)" To="180" Duration="00:00:00.01"/>
                                        <DoubleAnimation Storyboard.TargetName="highlightArrowTransform" Storyboard.TargetProperty="(RotateTransform.Angle)" To="180" Duration="00:00:00.01"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SortDescending">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="arrow" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)" To="0.4" Duration="00:00:00.15"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextDataGridHeader" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource DataGridHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
    </Style>

    <Style x:Key="NumericDataGridHeader" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource DataGridHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
    </Style>

    <Style x:Key="BorderlessNumericDataGridHeader" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource NumericDataGridHeader}">
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
    </Style>

    <Style x:Key="TextGridElement">
        <Setter Property="TextBlock.TextAlignment" Value="Left"/>
        <Setter Property="TextBlock.Margin" Value="12,0"/>
    </Style>
    
    <Style x:Key="NumericGridElement">
        <!--Numbers have to be pushed 44 characters to the left so that the align with the column words and not the arrow icon-->
        <!--There are 12 pixels of padding followed by the arrow which takes up another 32 pixels-->
        <Setter Property="TextBlock.TextAlignment" Value="Right"/>
        <Setter Property="TextBlock.Margin" Value="12,0,44,0"/>
        <!--<Setter Property="TextBlock.Background" Value="Blue"/>-->
    </Style>


    <Style x:Key="DataGridHeaderPresenter" TargetType="{x:Type DataGridColumnHeadersPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
                    <Grid>
                        <DataGridColumnHeader Background="Transparent" x:Name="PART_FillerColumnHeader" IsHitTestVisible="False"/>
                        <ItemsPresenter/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGrid" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Style="{StaticResource DataGridHeaderPresenter}" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>