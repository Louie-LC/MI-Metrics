<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MI_Metrics">

    <Style TargetType="{x:Type CalendarDayButton}" x:Name="CalendarDayButtonStyle">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="FontFamily" Value="Siemens Sans"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                    <Grid>

                        <Ellipse x:Name="GrayEllipse" Width="32" Height="32">
                            <Ellipse.Fill>
                                <SolidColorBrush Color="{StaticResource UI1}" Opacity="0"/>
                            </Ellipse.Fill>
                        </Ellipse>
                        
                        <Ellipse x:Name="OrangeEllipse" Width="32" Height="32">
                            <Ellipse.Fill>
                                <SolidColorBrush Color="{StaticResource UI3}" Opacity="0"/>
                            </Ellipse.Fill>
                        </Ellipse>

                        <ContentPresenter x:Name="NormalText" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Opacity="0.9"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState>
                                </VisualState>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="GrayEllipse" Storyboard.TargetProperty="Opacity" To="0" Duration="00:00:00.15"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="GrayEllipse" Storyboard.TargetProperty="Opacity" To="0.05" Duration="00:00:00.15"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BlackoutDayStates">
                                <VisualState x:Name="NormalDay">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="NormalText" Storyboard.TargetProperty="Opacity" To="0.9" Duration="00"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Blackoutday">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="NormalText" Storyboard.TargetProperty="Opacity" To="0.2" Duration="00"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="OrangeEllipse" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="GrayEllipse" Property="Visibility" Value="Visible"/>
                            <Setter Property="FontWeight" Value="Normal"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="OrangeEllipse" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="GrayEllipse" Property="Visibility" Value="Hidden"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>

                        <!--A set of multitriggers for handling when the control IsSelected and if the day is today-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsToday" Value="False"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter TargetName="NormalText" Property="Opacity" Value="0.9"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsToday" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter TargetName="NormalText" Property="Opacity" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsToday" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource UI3}"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="NormalText" Property="Opacity" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsToday" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter TargetName="NormalText" Property="Opacity" Value="1"/>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Name="CalendarButtonStyle" TargetType="{x:Type CalendarButton}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="64"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Siemens Sans"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarButton}">
                    <Grid>
                        <Border x:Name="GrayBorder" CornerRadius="16">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource UI1}" Opacity="0"/>
                            </Border.Background>
                        </Border>
                        <Border x:Name="OrangeBorder" CornerRadius="16">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource UI3}" Opacity="1"/>
                            </Border.Background>
                        </Border>
                        <Grid>
                            <ContentPresenter x:Name="NormalText" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="GrayBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Opacity)" To="0" Duration="00:00:00.15"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="GrayBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Opacity)" To="0.05" Duration="00:00:00.15"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding NormalText.Content, Converter={x:Static local:CurrentMonthConverter.Instance}}" Value="True">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{StaticResource UI3}"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="NormalText" Property="Opacity" Value="1"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding NormalText.Content, Converter={x:Static local:CurrentMonthConverter.Instance}}" Value="False">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="Black"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="NormalText" Property="Opacity" Value="0.9"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>








    <Style TargetType="{x:Type Calendar}">


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>










    <Style TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DatePickerTextBox">
                    <Grid>
                        <Grid x:Name="LabelGrid" Height="32" VerticalAlignment="Top" Visibility="Visible">
                            <TextBlock FontFamily="Siemens Sans" FontSize="14" Text="{TemplateBinding Tag}" VerticalAlignment="Center" HorizontalAlignment="Left" Opacity="0.6" Margin="1,0,0,0"/>
                        </Grid>

                        <Grid x:Name="DateGrid" Height="32" VerticalAlignment="Bottom">
                            <ScrollViewer x:Name="PART_ContentHost" Width="{TemplateBinding Width}" Height="32" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="LabelGrid" Storyboard.TargetProperty="Height" To="32" Duration="00:00:00.15"/>
                                        <DoubleAnimation Storyboard.TargetName="DateGrid" Storyboard.TargetProperty="Height" To="32" Duration="00:00:00.15"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_ContentHost" Storyboard.TargetProperty="Height" To="32" Duration="00:00:00.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="LabelGrid" Storyboard.TargetProperty="Height" To="16" Duration="00:00:00.15"/>
                                        <DoubleAnimation Storyboard.TargetName="DateGrid" Storyboard.TargetProperty="Height" To="16" Duration="00:00:00.15"/>
                                        <DoubleAnimation Storyboard.TargetName="PART_ContentHost" Storyboard.TargetProperty="Height" To="16" Duration="00:00:00.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DatePicker}">
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Grid x:Name="PART_Root">
                        <Border x:Name="Border" BorderThickness="0,0,0,1" CornerRadius="2">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource UI1}" Opacity="0.2"/>
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource UI1}" Opacity="0.05"/>
                            </Border.Background>
                        </Border>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="4"/>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="4"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="8"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="8"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="8"/>
                                <ColumnDefinition Width="24"/>
                                <ColumnDefinition Width="8"/>
                            </Grid.ColumnDefinitions>

                            <DatePickerTextBox x:Name="PART_TextBox" Grid.Row="1" Grid.Column="1" Height="32" Width="96" FontFamily="Siemens Sans" FontSize="14" Opacity="0.9" Background="Transparent" HorizontalAlignment="Left" VerticalAlignment="Center" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Tag="{TemplateBinding Tag}"/>

                            <Button x:Name="ClearButton" Grid.Row="1" Grid.Column="3" Height="24" Width="24" VerticalAlignment="Center" HorizontalAlignment="Center" Tag="pack://application:,,,/Images/UI/CloseIcon.png" Style="{StaticResource AdjustableIconButton}"/>

                            <Button x:Name="PART_Button" Grid.Row="1" Grid.Column="5" Style="{StaticResource AdjustableIconButton}" Width="24" Height="24" VerticalAlignment="Center" HorizontalAlignment="Center" Tag="pack://application:,,,/Images/UI/CalendarIcon.png"/>
                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_Root}" StaysOpen="False"/>


                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--Hides the clear button when no text is present-->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="ClearButton" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>

                        <!--Changes the coloring of the background and border when the control is moused over-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Opacity)" To="0.1" Duration="00:00:00.15"/>
                                        <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Opacity)" To="0.6" Duration="00:00:00.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Opacity)" To="0.05" Duration="00:00:00.15"/>
                                        <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Opacity)" To="0.2" Duration="00:00:00.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>